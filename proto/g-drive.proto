
syntax = "proto3";

package gdrive;

// The greeting service definition.
service Gdrive {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {}

  rpc SayHelloAgain (HelloRequest) returns (HelloReply) {}
  rpc GetAllTenants (HelloRequest) returns (TenantsReply) {}
  rpc SaveTenant (TenantRequest) returns (HelloReply) {}
  rpc SaveUser (UserRequest) returns (SuccessReply) {}
  rpc SaveFolder (FolderRequest) returns (SuccessReply) {}
  rpc GetUserFolder (FolderGetRequest) returns (FolderReply) {}
  rpc SaveFile (FileRequest) returns (SuccessReply) {}
  rpc getFiles (FilesGetRequest) returns (FileReply) {}

}

// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}

message SuccessReply {
  string code = 1;
  string message = 2;
}

message TenantsReply {
  repeated TenantObject data = 1;
}

message TenantObject{
  string _id = 1;
  string name = 2;
  string dnsExtension = 3;
}


message FolderObject{
  string _id = 1;
  string name = 2;
}

message FolderReply {
  repeated FolderObject data = 1;
}

message TenantRequest{
  string name = 1;
  string dnsExtension = 2;
}

message UserRequest{
  string firstName = 1;
  string lastName = 2;
  string email = 3;
}

message FolderRequest{
  string name = 1;
  string userId = 2;
  string userEmail = 3;
}

message FolderGetRequest{
  string userId = 1;
  string userEmail = 2;
}

message FileRequest{
  string name = 1;
  string folderId = 2;
  string content = 3;
  string userEmail = 4;

}

message FilesGetRequest{
  string folderId = 1;
  string userEmail = 2;
}

message FileObject{
  string _id = 1;
  string name = 2;
  string content = 3;
}

message FileReply {
  repeated FileObject data = 1;
}